type Release implements Node {
  id: ID!
  createdAt: String!
  updatedAt: String

  # User who started the release.
  userId: ID!

  # Which content piece did the user init
  # the release from.
  contentId: ID
  content: MusicContent!

  # Processing. Is there a consumer putting
  # in some work right now?
  processing: Boolean,

  # Metadata used for traditional channels:
  # Spotify, Apple Music, etc.
  defaultMetadata: ReleaseDefaultMetadata

  # @TODO Youtube, SoundCloud metadata.

  # Rights holder of the content.
  rightsHolder: ReleaseRightsHolder

  status: ReleaseStatusEnum!
}

type ReleaseDefaultMetadata {
  title: String
  artist: String
  recordLabel: String
  language: String # @TODO Lang Enum
  primaryGenre: String # @TODO Genre Enum
  secondaryGenre: String
  releaseDate: String # ISO date string
  price: Int

  # Square artwork
  audioVersionId: String
  artworkVersionId: String
}

type ReleaseRightsHolder {
  firstName: String
  lastName: String
  address: String
  city: String # @TODO City Enum
  state: String # @TODO State Enum
  zipCode: String
  phoneNumber: String
  didAgree: Boolean
}

enum ReleaseStatusEnum {
  LIVE
  PROCESSING
  ISSUE
}
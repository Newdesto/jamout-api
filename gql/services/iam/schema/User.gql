type User implements Node {
  id: ID!
  createdAt: String!
  updatedAt: String

  # Account
  email: String
  phoneNumber: String
  # stripeCustomerId: String
  stripeCustomer: JSON
  soundcloudUserId: String
  soundcloudAccessToken: String
  isPartner: Boolean

  # Profile
  avatarKey: String
  avatarUrl: String
  displayName: String
  city: String
  country: String
  blurb: String

  soundcloudTracks: [JSON!]
  didOnboard: Boolean

  channels: UserChannels
}

type UserChannels {
  paidPlatforms: UserChannelPaidPlatforms
}

type UserChannelPaidPlatforms {
  firstName: String
  lastName: String
  address: String
  city: String # @TODO City Enum
  state: String # @TODO State Enum
  zipCode: String
  phoneNumber: String
  didAgree: Boolean
}

input UserInput {
  # Account
  email: String
  phoneNumber: String
  
  didOnboard: Boolean

  # Profile
  avatarKey: String
  displayName: String
  city: String
  country: String
  blurb: String
  
  channels: UserChannelsInput
}

input UserChannelsInput {
  paidPlatforms: UserChannelPaidPlatformsInput
}

input UserChannelPaidPlatformsInput {
  firstName: String
  lastName: String
  address: String
  city: String # @TODO City Enum
  state: String # @TODO State Enum
  zipCode: String
  phoneNumber: String
  didAgree: Boolean
}
